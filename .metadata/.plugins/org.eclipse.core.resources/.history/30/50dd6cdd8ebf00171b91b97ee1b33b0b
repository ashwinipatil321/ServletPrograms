package com.bridgeit11;
import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.Iterator;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import com.mysql.jdbc.Statement;
import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.FileUploadException;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;
import org.apache.commons.io.output.*;

@SuppressWarnings("serial")
public class ServletFileUploading extends HttpServlet {
	 private boolean isMultipart;
	   private String filePath;
	   private int maxFileSize = 50 * 1024;
	   private int maxMemSize = 4 * 1024;
	   private File file ;
	Connection connection=null;
	Statement statement=null;
	public void init()
	{
	      filePath = getServletContext().getInitParameter("/home/bridgeit.file.json"); 

	}
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	
	      isMultipart = ServletFileUpload.isMultipartContent(request);	
	      response.setContentType("text/html");
	      PrintWriter printWriter=response.getWriter();
	      if( !isMultipart ) {
	    	  printWriter.println("<html>");
	    	  printWriter.println("<head>");
	    	  printWriter.println("<title>Servlet upload</title>");  
	    	  printWriter.println("</head>");
	    	  printWriter.println("<body>");
	    	  printWriter.println("<p>No file uploaded</p>"); 
	    	  printWriter.println("</body>");
	    	  printWriter.println("</html>");
	          return;
	       }
	     
	      DiskFileItemFactory factory = new DiskFileItemFactory();
	      
	      // maximum size that will be stored in memory
	      factory.setSizeThreshold(maxMemSize);
	   
	      // Location to save data that is larger than maxMemSize.
	      factory.setRepository(new File("c:\\temp"));

	      // Create a new file upload handler
	      ServletFileUpload upload = new ServletFileUpload(factory);
	   
	      // maximum file size to be uploaded.
	      upload.setSizeMax( maxFileSize );

	      try { 
	         // Parse the request to get file items.
	         List fileItems = upload.parseRequest(request);
		
	         // Process the uploaded file items
	         Iterator i = fileItems.iterator();

	         printWriter.println("<html>");
	         printWriter.println("<head>");
	         printWriter.println("<title>Servlet upload</title>");  
	         printWriter.println("</head>");
	         printWriter.println("<body>");
	   
	         while ( i.hasNext () ) {
	            FileItem fi = (FileItem)i.next();
	            if ( !fi.isFormField () ) {
	               // Get the uploaded file parameters
	               String fieldName = fi.getFieldName();
	               String fileName = fi.getName();
	               String contentType = fi.getContentType();
	               boolean isInMemory = fi.isInMemory();
	               long sizeInBytes = fi.getSize();
	            
	               // Write the file
	               if( fileName.lastIndexOf("\\") >= 0 ) {
	                  file = new File( filePath + fileName.substring( fileName.lastIndexOf("\\"))) ;
	               } else {
	                  file = new File( filePath + fileName.substring(fileName.lastIndexOf("\\")+1)) ;
	               }
	               fi.write( file ) ;
	               printWriter.println("Uploaded Filename: " + fileName + "<br>");
	            }
	         }
	         printWriter.println("</body>");
	         printWriter.println("</html>");
	         } catch(Exception ex) {
	            System.out.println(ex);
	         }
	      }
	      
	      public void doGet(HttpServletRequest request, HttpServletResponse response)
	         throws ServletException, java.io.IOException {

	         throw new ServletException("GET method used with " +
	            getClass( ).getName( )+": POST method required.");
	      }

	}

